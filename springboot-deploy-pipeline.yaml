# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- springboot

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Maven@3
  displayName: maven-package
  inputs:
    mavenPomFile: 'docker-spring-boot-java-web-service-example/pom.xml'
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false
- task: Docker@2
  displayName: docker-buildnpush
  inputs:
    containerRegistry: 'acrsvcconnection'
    repository: 'docker-springboot'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
- task: HelmInstaller@1
  displayName: helm-install
  inputs:
    helmVersionToInstall: '3.0.0'
- task: HelmDeploy@0
  displayName: helm-package
  inputs:
    command: 'package'
    chartPath: 'docker-spring-boot-java-web-service-example/helmcharts/springboot'
    save: false
    arguments: '--set acr.repository=containerregistry672a.azurecr.io/docker-springboot --set image.tag=$(Build.BuildId)'
- task: PublishBuildArtifacts@1
  displayName: publish-artifacts
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'